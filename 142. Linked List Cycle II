/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        
         if (head == nullptr || head->next == nullptr)
            return NULL;

        ListNode* slow = head;
        ListNode* fast = head;

        while (fast != nullptr && fast->next != nullptr) {
           slow = slow->next;
            fast = fast->next->next;
            if (slow == fast)
                {
                    fast=head;
                    while(slow!=fast)
                    {
                        fast=fast->next;
                        slow=slow->next;
                    }
                    return slow;
                }
            
        }
        return NULL;
    }     
};

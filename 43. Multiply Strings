class Solution {
public:
    string multiply(string num1, string num2) {
           int n1 = num1.size();
    int n2 = num2.size();
    std::vector<int> product(n1 + n2, 0);

    // Multiply each digit of num1 with each digit of num2
    for (int i = n1 - 1; i >= 0; i--) {
        for (int j = n2 - 1; j >= 0; j--) {
            int digit1 = num1[i] - '0';
            int digit2 = num2[j] - '0';

            int pos1 = i + j;
            int pos2 = i + j + 1;

            int partialProduct = digit1 * digit2 + product[pos2];
            product[pos2] = partialProduct % 10;
            product[pos1] += partialProduct / 10;
        }
    }

    // Remove leading zeros from the product
    int i = 0;
    while (i < product.size() && product[i] == 0) {
        i++;
    }

    // Construct the resulting string
    std::string result;
    for (; i < product.size(); i++) {
        result += std::to_string(product[i]);
    }

    return (result.empty()) ? "0" : result;
    }
};
